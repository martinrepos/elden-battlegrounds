* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  overflow: hidden;
  background: #1e1208;
}

/* outer pixel border frame */
.outerGameFrame {
  width: 100%;        
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #1e1208;

  border: 32px solid transparent;
  border-image: url("/images/newborder.png") 32 fill stretch;
  image-rendering: pixelated;
  box-sizing: border-box;
  padding: 0;
}

.roundinfo {
  position: absolute;
  top: 8px;
  left: 8px;
  z-index: 10;
  background: rgba(0, 0, 0, 0.4);
  color: #f9c043;
  padding: 6px 10px;
  border-radius: 2px;
  font-size: 0.9rem;
  pointer-events: none;
  font-family: 'Cinzel', serif;
}
/* main layout container */
.contentWrapper {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background: #090400;
  padding: 0;
  overflow: hidden;
  
}

/* game display */
.gameArea {
  flex: 1;
  background: #f0e4d3;
  padding: 10rem ;
  border-radius: 0px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  overflow: hidden;
  position: relative
  
}

/* battlefield with character sprites */
.battlefield {
  position: relative;
  width: 100%;
  height: 360px;
  margin-bottom: 1rem;
}

.characterWrapper {
  position: absolute;
  width: 150px;
  height: 300px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
}

.player {
  bottom: -150px;
  left: 25%;
  transform: translateX(-50%);
}

.opponent {
  top: -150px;
  right: 25%;
  transform: translateX(50%);
}

/* character sprite */
.sprite {
  position: absolute;
  bottom: 0;
  max-height: 320px;
  image-rendering: pixelated;
  z-index: 1;
  transform: scale(1.0);
}

.spriteWrapper {
  position: absolute;
  bottom: 0;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

.opponentSprite {
  transform: scaleX(-1) scale(1.0);
}

.flipped {
  transform: scaleX(-1) scale(1.0);
}

/* HP display */
.hpLabel {
  font-weight: bolder;
  font-size: 0.75rem;
  color: #bd6707;
  margin-bottom: 2px;
  z-index: 2;
}

.hpBar {
  width: 100px;
  height: 12px;
  background: #444;
  border: 1px solid #222;
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 10px;
  z-index: 2;
}

.hpFill {
  height: 100%;
  background: linear-gradient(to right, #2ecc71, #27ae60);
  transition: width 0.3s ease;
}

.zero {
  background: transparent !important;
}

/* abilities panel */
.abilitiesBackground {
  flex: 0 0 110px;
  height: 110px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.5rem;
  padding: 0.25rem 0.5rem;
  background-color: #13110B;
  margin-top: 8px;  
}

.abilitiesButtons {
  position: relative;
  padding: 0.5rem;
  text-align: center;
  color: #f9c043;
  font-size: 9px;
  cursor: pointer;
  user-select: none;
  background: rgba(43, 26, 16, 0.75);
  border: 1px solid #8a5c2c;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.abilitiesButtons:hover {
  background-color: rgba(168, 92, 28, 0.3);
}

.PP {
  position: absolute;
  bottom: 1px;
  right: 1px;
  font-size: 0.5rem;
  color: #f9c043;
  opacity: 0.8;
}

/* status Effects */
.doomed {
  filter: hue-rotate(270deg) saturate(1.5);
}

.feared {
  filter: hue-rotate(300deg) saturate(1.5);
}

.stunned {
  filter: grayscale(1) brightness(1.1);
  animation: stunnedHueShift 1.2s linear infinite;
}

.rotted {
  filter: sepia(1) saturate(6) hue-rotate(-50deg) brightness(0.8) contrast(1.2);
}

.burn{
  filter: sepia(1) saturate(6) hue-rotate(0deg) brightness(1.1) contrast(1.4);
}

.paralyzed {
  filter: sepia(0.5) saturate(2) hue-rotate(-30deg) brightness(0.95) contrast(1.1);
}

/* animations */
@keyframes fainted {
  0% { transform: translateY(0); opacity: 1; }
  100% { transform: translateY(100px); opacity: 0; }
}

.fainted {
  animation: fainted 0.8s forwards;
}

@keyframes shake {
  0% { transform: translateX(0); }
  20% { transform: translateX(-4px); }
  40% { transform: translateX(4px); }
  60% { transform: translateX(-4px); }
  80% { transform: translateX(4px); }
  100% { transform: translateX(0); }
}

.shake {
  animation: shake 0.4s ease;
  will-change: transform;
}
